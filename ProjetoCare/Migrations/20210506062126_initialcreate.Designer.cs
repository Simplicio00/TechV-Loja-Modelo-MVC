// <auto-generated />
using System;
using Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ProjetoCare.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210506062126_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Classes.Canal.Canal", b =>
                {
                    b.Property<int>("CanalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("CanalId");

                    b.ToTable("Canal");
                });

            modelBuilder.Entity("Classes.Canal.CanalUser", b =>
                {
                    b.Property<int>("IdMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CanalId")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMessage");

                    b.HasIndex("CanalId");

                    b.ToTable("CanalUser");
                });

            modelBuilder.Entity("Classes.Categoria.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Classes.Estoque.Estoque", b =>
                {
                    b.Property<int>("IdEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstoque");

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("Classes.Historico.HistoricoCompra", b =>
                {
                    b.Property<int>("IdHistoricoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("IdHistoricoCompra");

                    b.HasIndex("IdUsuario");

                    b.ToTable("HistoricoCompra");
                });

            modelBuilder.Entity("Classes.Imagem.Imagem", b =>
                {
                    b.Property<int>("IdImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<string>("ImagemCaminho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagem");

                    b.HasIndex("IdProduto");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("Classes.Produto.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEstoque")
                        .HasColumnType("int");

                    b.Property<int>("Largura")
                        .HasColumnType("int");

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdProduto");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEstoque");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Classes.Registro.Registro", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdHistoricoCompra")
                        .HasColumnType("int");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRegistro");

                    b.HasIndex("IdHistoricoCompra");

                    b.ToTable("Registro");
                });

            modelBuilder.Entity("Classes.Usuario.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CanalId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdUsuario");

                    b.HasIndex("CanalId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Classes.Canal.CanalUser", b =>
                {
                    b.HasOne("Classes.Canal.Canal", "CanalIdNavigation")
                        .WithMany("CanalUser")
                        .HasForeignKey("CanalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CanalIdNavigation");
                });

            modelBuilder.Entity("Classes.Historico.HistoricoCompra", b =>
                {
                    b.HasOne("Classes.Usuario.Usuario", "IdUsuarioNavigation")
                        .WithMany("Historico")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Classes.Imagem.Imagem", b =>
                {
                    b.HasOne("Classes.Produto.Produto", "ProdutoNavigation")
                        .WithMany("Imagens")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProdutoNavigation");
                });

            modelBuilder.Entity("Classes.Produto.Produto", b =>
                {
                    b.HasOne("Classes.Categoria.Categoria", "IdCategoriaNavigation")
                        .WithMany("Produto")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Classes.Estoque.Estoque", "IdEstoqueNavigation")
                        .WithMany("Produto")
                        .HasForeignKey("IdEstoque")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdEstoqueNavigation");
                });

            modelBuilder.Entity("Classes.Registro.Registro", b =>
                {
                    b.HasOne("Classes.Historico.HistoricoCompra", "IdHistoricoCompraNavigation")
                        .WithMany("Registros")
                        .HasForeignKey("IdHistoricoCompra")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IdHistoricoCompraNavigation");
                });

            modelBuilder.Entity("Classes.Usuario.Usuario", b =>
                {
                    b.HasOne("Classes.Canal.Canal", "CanalIdNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("CanalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CanalIdNavigation");
                });

            modelBuilder.Entity("Classes.Canal.Canal", b =>
                {
                    b.Navigation("CanalUser");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Classes.Categoria.Categoria", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Classes.Estoque.Estoque", b =>
                {
                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Classes.Historico.HistoricoCompra", b =>
                {
                    b.Navigation("Registros");
                });

            modelBuilder.Entity("Classes.Produto.Produto", b =>
                {
                    b.Navigation("Imagens");
                });

            modelBuilder.Entity("Classes.Usuario.Usuario", b =>
                {
                    b.Navigation("Historico");
                });
#pragma warning restore 612, 618
        }
    }
}
